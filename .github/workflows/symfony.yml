name: Symfony-nj

on:
  push:
    branches:
      - master
      - dev
  pull_request:

jobs:
  build:
    name: Symfony
  
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

      # Composer
    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
        
    - name: Install Composer
      run: composer install
  
  # Build
    - name: Yarn install
      if: steps.yarn-cache-node-modules.outputs.cache-hit != 'true'
      run: yarn install

    - name: Yarn build
      run: yarn run encore production

    - name: Archive production artifacts
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: public/build
  # Symfony
    - name: Check the Symfony console
      run: |
        php bin/console -V
        php bin/console about
  # Tests
    - name: Run unit and functional tests
      run: |
        php bin/phpunit --stop-on-failure
  # Configure SSH
      uses: kielabokkie/ssh-key-and-known-hosts-action@v1
      with:
        ssh-private-key: ${{ secrets.PRIVATE_KEY}}
        ssh-host: ${{ secrets.TARGET_HOST }}
    # Deploy to production    
    - name: Copy artefact to server
      uses: garygrossgarten/github-action-scp@release
      with:
        local: public
        remote: ~/project
        host: ${{ secrets.TARGET_HOST }}
        username: ${{ secrets.TARGET_USER  }}
        


    

